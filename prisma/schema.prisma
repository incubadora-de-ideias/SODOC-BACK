// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               String            @id @default(uuid())
  nome             String
  telefone         String?
  email            String?
  n_bi             String?
  password         String
  id_tipo_usuario  String
  grupo_usuario    GrupoUsuario[]
  documento        Documento[]
  versao_documento VersaoDocumento[]
  tipo_usuario     TipoUsuario       @relation(fields: [id_tipo_usuario], references: [id])
  permissao        Permissao[]
  workflow         Workflow[]
  usuario_etapa    UsuarioEtapa[]
  auditoria        Auditoria[]
  notificacao      Notificacao[]
}

model TipoUsuario {
  id      String    @id @default(uuid())
  tipo    String
  usuario Usuario[]
}

model Grupo {
  id            String         @id @default(uuid())
  nome          String
  descricao     String?
  grupo_usuario GrupoUsuario[]
  permissao     Permissao[]
}

model GrupoUsuario {
  id         String  @id @default(uuid())
  id_usuario String
  id_grupo   String
  grupo      Grupo   @relation(fields: [id_grupo], references: [id])
  usuario    Usuario @relation(fields: [id_usuario], references: [id])
}

model Documento {
  id               String            @id @default(uuid())
  nome             String
  descricao        String?
  caminho          String
  id_usuario       String
  usuario          Usuario           @relation(fields: [id_usuario], references: [id])
  versao_documento VersaoDocumento[]
  permissao        Permissao[]
  auditoria        Auditoria[]
}

model VersaoDocumento {
  id           String      @id @default(uuid())
  id_documento String
  id_usuario   String
  caminho      String
  n_versao     Int
  usuario      Usuario     @relation(fields: [id_usuario], references: [id])
  documento    Documento   @relation(fields: [id_documento], references: [id])
  auditoria    Auditoria[]
}

model Permissao {
  id                String  @id @default(uuid())
  id_documento      String
  id_grupo          String?
  id_usuario        String?
  id_tipo_permissao String

  documento      Documento     @relation(fields: [id_documento], references: [id])
  grupo          Grupo?        @relation(fields: [id_grupo], references: [id])
  usuario        Usuario?      @relation(fields: [id_usuario], references: [id])
  tipo_permissao TipoPermissao @relation(fields: [id_tipo_permissao], references: [id])
}

// Tipo de permiss√£o
// 1 - Visualizar
// 2 - Editar
model TipoPermissao {
  id        String      @id @default(uuid())
  tipo      String
  permissao Permissao[]
}

model Workflow {
  id         String  @id @default(uuid())
  nome       String
  descricao  String?
  id_usuario String
  usuario    Usuario @relation(fields: [id_usuario], references: [id])
  etapa      Etapa[]
}

model Etapa {
  id                     String         @id @default(uuid())
  nome                   String
  descricao              String?
  id_workflow            String
  estado                 String
  id_usuario_responsavel String
  workflow               Workflow       @relation(fields: [id_workflow], references: [id])
  usuario_etapa          UsuarioEtapa[]
  auditoria              Auditoria[]
}

model UsuarioEtapa {
  id         String  @id @default(uuid())
  id_usuario String
  id_etapa   String
  usuario    Usuario @relation(fields: [id_usuario], references: [id])
  etapa      Etapa   @relation(fields: [id_etapa], references: [id])
}

model Auditoria {
  id                  String          @id @default(uuid())
  id_usuario          String
  id_etapa            String
  id_documento        String
  id_versao_documento String
  usuario             Usuario         @relation(fields: [id_usuario], references: [id])
  etapa               Etapa           @relation(fields: [id_etapa], references: [id])
  documento           Documento       @relation(fields: [id_documento], references: [id])
  versao_documento    VersaoDocumento @relation(fields: [id_versao_documento], references: [id])
}

model Notificacao {
  id         String @id @default(uuid())
  id_usuario String
  mensagem   String

  usuario Usuario @relation(fields: [id_usuario], references: [id])
}
