// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Permissao {
  EDITAR
  VER
}

model Documento {
  id                 String              @id @default(uuid())
  nome               String
  descricao          String?
  caminho            String
  versoes_documentos VersaoDocumento[]
  acessos            AcessoDocumento[]
  tarefas_documentos TarefasDocumentos[]
}

model Tarefa {
  id                 String              @id @default(uuid())
  nome               String
  descricao          String?
  id_usuario         String
  tarefas_documentos TarefasDocumentos[]
}

model TarefasDocumentos {
  id           String @id @default(uuid())
  id_tarefa    String
  id_documento String

  tarefa    Tarefa    @relation(fields: [id_tarefa], references: [id])
  documento Documento @relation(fields: [id_documento], references: [id])
}

model VersaoDocumento {
  id           String    @id @default(uuid())
  id_documento String
  id_usuario   String
  descricao    String
  caminho      String
  data_criacao DateTime  @default(now())
  documento    Documento @relation(fields: [id_documento], references: [id])
  usuario      Usuario   @relation(fields: [id_usuario], references: [id])
}

model AcessoDocumento {
  id           String    @id @default(uuid())
  id_usuario   String
  id_documento String
  permissao    Permissao @default(VER)

  usuario   Usuario   @relation(fields: [id_usuario], references: [id])
  documento Documento @relation(fields: [id_documento], references: [id])
}

model Grupo {
  id             String          @id @default(uuid())
  nome           String
  usuarios_grupo UsuariosGrupo[]
}

model UsuariosGrupo {
  id        String  @id @default(uuid())
  id_usario String
  id_grupo  String
  usuario   Usuario @relation(fields: [id_usario], references: [id])
  grupo     Grupo   @relation(fields: [id_grupo], references: [id])

  @@unique([id_grupo, id_usario])
}

model Usuario {
  id                 String            @id @default(uuid())
  nome               String
  telefone           String?
  email              String?
  n_bi               String?
  password           String
  id_tipo_usuario    String
  versoes_documentos VersaoDocumento[]
  usuario_grupos     UsuariosGrupo[]
  acesso_documentos  AcessoDocumento[]
  notificacoes       Notificacao[]
}

enum TipoNotificacao {
  INTERNA
  EXTERNA
}

model Notificacao {
  id         String          @id @default(uuid())
  id_usuario String
  titulo     String
  descricao  String
  tipo       TipoNotificacao @default(INTERNA)
  usuario    Usuario         @relation(fields: [id_usuario], references: [id])
}
